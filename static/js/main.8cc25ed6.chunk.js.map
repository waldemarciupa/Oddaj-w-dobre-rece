{"version":3,"sources":["firebase/firebase.utils.js","components/Header/Header.js","components/Button.js","components/Welcome/Welcome.js","components/Statistic/Statistic.js","components/Steps/IconsCards.js","components/Decoration.js","components/Steps/Steps.js","components/About/About.js","redux/foundations/types.js","redux/foundations/actions.js","redux/foundations/operations.js","components/WhoWeHelp/Pagination.js","components/WhoWeHelp/WhoWeHelp.js","components/Contact/Contact.js","components/Footer/Footer.js","components/Home/index.js","components/Home/Homepage.js","components/NotFound.js","theme/GlobalStyle.js","theme/mainTheme.js","templates/MainTemplate.js","components/Register/Register.js","components/Login/Login.js","components/Logout/Logout.js","redux/users/types.js","App.js","redux/users/actions.js","redux/users/reducer.js","redux/foundations/reducer.js","redux/rootReducer.js","redux/store.js","index.js","assets/Decoration.svg","assets/Home-Hero-Image.jpg","assets/3ColumnsBackground.png","assets/Icon-1.svg","assets/Icon-2.svg","assets/Icon-3.svg","assets/Icon-4.svg","assets/People.jpg","assets/Signature.svg","assets/Background-Contact-Form.jpg","assets/Instagram.svg","assets/Facebook.svg"],"names":["createUserProfileDocument","userAuth","additionalData","a","userRef","firestore","doc","uid","get","exists","displayName","email","createdAt","Date","set","console","log","message","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup","StyledHeader","styled","div","StyledHeaderTop","StyledHeaderTopUser","StyledUser","p","StyledHeaderBottom","StyledNavLink","NavLink","secondary","css","StyledScrollLink","Link","attrs","scroll","connect","currentUser","user","to","style","color","onClick","signOut","exact","Button","button","theme","OpenSans","texttransform","StyledWelcomeWrapper","StyledWelcomeLeft","homeHeroImage","StyledWelcomeRight","StyledRightWrapper","decoration","StyledWelcomeTitle","h1","StyledButtonsWrapper","Welcome","StyledStatistic","ThreeColumnImage","StyledColumn","StyledNumber","h2","StyledTitle","h3","StyledText","Merriweather","Statistic","StyledIconsWrapper","StyledIconCard","StyledIcon","img","StyledSpan","span","Styledtext","h4","IconsCards","src","icon1","icon2","icon3","icon4","Decoration","alt","StyledSteps","Steps","StyledAbout","StyledAboutContent","StyledAboutContentWrapper","StyledAboutTitle","StyledAboutText","StyledSignature","StyledAboutImage","people","About","height","signature","item","type","types","payload","fetchData","fetch","method","response","json","foundations","StyledNav","nav","StyledNavList","ul","StyledNavListElement","li","StyledNavListLink","Pagination","foundationPerPage","totalFoundations","paginate","foundationNumbers","i","Math","ceil","push","map","number","key","href","e","preventDefault","length","StyledWhoWeHelpContainer","StyledNavigation","StyledButton","StyledContent","StyledContentTitle","StyledList","StyledFoundationsContainer","StyledListElement","StyledListElementLeft","StyledName","StyledMission","StyledThings","current","dispatch","getAllData","actions","getThingsFromState","fundation","getCurrentFundation","clear","useState","currentPage","setCurrentPage","useEffect","indexOfLastFoundation","indexOfFirstFoundation","currentFoundations","items","slice","desc","header","mission","things","pageNumber","StyledContact","background","StyledFormWrapper","StyledFormContent","StyledForm","Form","StyledFormTopInputs","StyledFormName","StyledFormEmail","StyledFormMessage","StyledLabel","label","StyledField","Field","StyledTextarea","StyledErrorMessage","ErrorMessage","Contact","initialValues","name","validate","values","errors","test","onSubmit","data","setSubmitting","resetForm","headers","body","JSON","stringify","isSubmitting","component","rows","disabled","StyledFooter","footer","StyledParagraph","StyledLinksWrapper","StyledLink","StyledLinkIcon","Footer","facebook","instagram","Homepage","id","StyledNotFound","NotFound","GlobalStyle","createGlobalStyle","white","grey","yellow","MainTemplate","children","StyledLoginWrapper","StyledLoginContent","StyledLoginContentTop","StyledLoginContentBottom","StyledFormPassword","StyledFormPasswordRepeat","StylednNavLink","withRouter","props","password","passwordRepeat","createUserWithEmailAndPassword","history","alert","error","StyledFormTopWrapper","StylednNavLinkHome","isGoogleSignIn","StyledLoginSucces","isLoggedIn","signInWithEmailAndPassword","Logout","App","unsubscribeFromAuth","setCurrentUser","this","onAuthStateChanged","onSnapshot","snapShot","path","Register","Login","React","Component","INITIAL_STATE","userReducer","state","list","foundationsReducer","find","el","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.8cc25ed6.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyBNOYL-oHE8VHFtwafO62jcKh0UZyNGe-0\",\r\n    authDomain: \"oddaj-rzeczy-d0566.firebaseapp.com\",\r\n    databaseURL: \"https://oddaj-rzeczy-d0566.firebaseio.com\",\r\n    projectId: \"oddaj-rzeczy-d0566\",\r\n    storageBucket: \"oddaj-rzeczy-d0566.appspot.com\",\r\n    messagingSenderId: \"1098956787208\",\r\n    appId: \"1:1098956787208:web:9a1bdd46181854d67f4bbd\",\r\n    measurementId: \"G-9RXD0VET99\"\r\n};\r\n\r\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\r\n    if (!userAuth) return;\r\n\r\n    const userRef = firestore.doc(`users/${userAuth.uid}`);\r\n\r\n    const snapShot = await userRef.get();\r\n\r\n    if (!snapShot.exists) {\r\n        const { displayName, email } = userAuth;\r\n        const createdAt = new Date();\r\n\r\n        try {\r\n            await userRef.set({\r\n                displayName,\r\n                email,\r\n                createdAt,\r\n                ...additionalData\r\n            });\r\n        } catch (error) {\r\n            console.log('error creating user', error.message);\r\n        }\r\n    }\r\n\r\n    return userRef;\r\n    console.log(snapShot)\r\n}\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nprovider.setCustomParameters({ prompt: 'select_account' });\r\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\r\n\r\nexport default firebase;","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { auth } from '../../firebase/firebase.utils';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Link } from 'react-scroll';\r\nimport { connect } from 'react-redux';\r\n\r\nconst StyledHeader = styled.div`\r\n    width: 683px;\r\n    height: 95px;\r\n    position: absolute;\r\n    top: 37px;\r\n    right: 0;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    flex-direction: column;\r\n\r\n    @media (max-width: 1366px) {\r\n        top: 17px;\r\n        height: 55px;\r\n    }\r\n`;\r\n\r\nconst StyledHeaderTop = styled.div`\r\n    text-align: right;\r\n`;\r\n\r\nconst StyledHeaderTopUser = styled.div`\r\n    display: flex;\r\n    justify-content: flex-end;\r\n`;\r\n\r\nconst StyledUser = styled.p`\r\n    font-size: 14px;\r\n    font-weight: 400;\r\n    color: #000;\r\n    padding: 9px 20px;\r\n`;\r\n\r\nconst StyledHeaderBottom = styled.div`\r\n    display: flex;\r\n    justify-content: flex-end;\r\n`;\r\n\r\nconst StyledNavLink = styled(NavLink)`\r\n    text-decoration: none;\r\n    color: #3C3C3C;\r\n    padding: 9px 20px;\r\n    font-size:  18px;\r\n    \r\n    ${({ secondary }) => {\r\n        return (\r\n            secondary && css`\r\n            color: #737373;\r\n            padding: 9px 20px;\r\n            font-size: 13px;\r\n            `\r\n        )\r\n    }}\r\n`;\r\n\r\nconst StyledScrollLink = styled(Link).attrs({\r\n    scroll: \"smooth\",\r\n\r\n})`\r\n    text-decoration: none;\r\n    color: #3C3C3C;\r\n    padding: 9px 20px;\r\n    font-size:  18px;\r\n    cursor: pointer;\r\n    \r\n    ${({ secondary }) => {\r\n        return (\r\n            secondary && css`\r\n            color: #737373;\r\n            margin-left: 10px;\r\n            padding: 9px 20px;\r\n            font-size: 13px;\r\n            `\r\n        )\r\n    }}\r\n`\r\nconst Header = ({ currentUser }) => {\r\n\r\n    const logout = () => {\r\n        auth.signOut();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <StyledHeader>\r\n                {\r\n                    currentUser ?\r\n                        <StyledHeaderTopUser>\r\n                            <StyledUser>Cześć {currentUser?.email}!</StyledUser>\r\n                            <StyledNavLink\r\n                                secondary='true'\r\n                                to='/'\r\n                                style={{ color: \"#000\" }}\r\n                            >\r\n                                Oddaj rzeczy</StyledNavLink>\r\n                            <StyledNavLink\r\n                                secondary='true'\r\n                                to='/wylogowano'\r\n                                onClick={logout}\r\n                            >\r\n                                Wyloguj</StyledNavLink>\r\n                        </StyledHeaderTopUser>\r\n                        :\r\n                        <StyledHeaderTop>\r\n                            <StyledNavLink\r\n                                secondary='true'\r\n                                to='/logowanie'>\r\n                                Zaloguj\r\n                            </StyledNavLink>\r\n                            <StyledNavLink\r\n                                secondary='true'\r\n                                to='/rejestracja'>\r\n                                Załóż konto\r\n                        </StyledNavLink>\r\n                        </StyledHeaderTop>\r\n                }\r\n\r\n                <StyledHeaderBottom>\r\n                    <StyledNavLink exact to='/'>Start</StyledNavLink>\r\n                    <StyledScrollLink to='section'>O co chodzi?</StyledScrollLink>\r\n                    <StyledScrollLink to='about'>O nas</StyledScrollLink>\r\n                    <StyledScrollLink to='whowehelp'>Fundacja i organizacje</StyledScrollLink>\r\n                    <StyledScrollLink to='contact'>Kontakt</StyledScrollLink>\r\n                </StyledHeaderBottom>\r\n            </StyledHeader>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({ user }) => {\r\n    return {\r\n        currentUser: user.currentUser\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Header);","import styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n    border: 0.75px solid #3C3C3C;\r\n    width: 310px;\r\n    height: 120px;\r\n    cursor: pointer;\r\n    font-size: 36px;\r\n    line-height: 45px;\r\n    text-align: center;\r\n    font-family: ${({ theme }) => theme.OpenSans};\r\n    font-weight: 300;\r\n    letter-spacing: 0;\r\n    color: #3C3C3C;\r\n    text-transform: ${({ texttransform }) => texttransform ? texttransform : \"none\"};\r\n`;\r\n\r\nexport default Button;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport homeHeroImage from '../../assets/Home-Hero-Image.jpg';\r\nimport decoration from '../../assets/Decoration.svg';\r\nimport Button from '../Button';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst StyledWelcomeWrapper = styled.div`\r\n    width: 100%;\r\n    height: 100vh;\r\n    display: flex;\r\n`;\r\n\r\nconst StyledWelcomeLeft = styled.div`\r\n    width: 100%;\r\n    background-image: url(${homeHeroImage});\r\n    background-size: cover;\r\n    background-position: right;\r\n`;\r\n\r\nconst StyledWelcomeRight = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nconst StyledRightWrapper = styled.div`\r\n    width: 674px;\r\n    height: 350px;\r\n    text-align: center;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    background-image: url(${decoration});\r\n    background-repeat: no-repeat;\r\n    background-position: center;\r\n\r\n    @media (max-width: 1366px) {\r\n        margin-top: 100px;\r\n    }\r\n`;\r\n\r\nconst StyledWelcomeTitle = styled.h1`\r\n    font-size: 38px;\r\n    font-weight: 400;\r\n    line-height: 55px;\r\n    letter-spacing: -0.76px;\r\n`;\r\n\r\nconst StyledButtonsWrapper = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n`;\r\n\r\nconst Welcome = () => {\r\n    return (\r\n        <StyledWelcomeWrapper>\r\n            <StyledWelcomeLeft />\r\n            <StyledWelcomeRight>\r\n                <StyledRightWrapper>\r\n                    <StyledWelcomeTitle>\r\n                        Zacznij pomagać!<br /> Oddaj niechciane rzeczy w zaufane ręce\r\n                    </StyledWelcomeTitle>\r\n                    <StyledButtonsWrapper>\r\n                        <NavLink to='/logowanie'>\r\n                            <Button texttransform=\"uppercase\">\r\n                                Oddaj rzeczy\r\n                            </Button>\r\n                        </NavLink>\r\n                        <NavLink to='/logowanie'>\r\n                            <Button texttransform=\"uppercase\">\r\n                                Zorganizuj zbiórkę\r\n                            </Button>\r\n                        </NavLink>\r\n                    </StyledButtonsWrapper>\r\n                </StyledRightWrapper>\r\n            </StyledWelcomeRight>\r\n        </StyledWelcomeWrapper>\r\n    )\r\n}\r\n\r\nexport default Welcome;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport ThreeColumnImage from '../../assets/3ColumnsBackground.png';\r\n\r\n\r\nconst StyledStatistic = styled.div`\r\n    width: 100%;\r\n    height: 384px;\r\n    background-image: url(${ThreeColumnImage});\r\n    display: flex;\r\n    justify-content: space-evenly;\r\n    align-items: center;\r\n`;\r\n\r\nconst StyledColumn = styled.div`\r\n    width: 334px;\r\n    height: 252px;\r\n    text-align: center;\r\n`;\r\n\r\nconst StyledNumber = styled.h2`\r\n    font-size: 90px;\r\n    line-height: 122px;\r\n    font-weight: 300;\r\n    color: #5E5322;\r\n`;\r\n\r\nconst StyledTitle = styled.h3`\r\n    color: #3C3C3C;\r\n    font-size: 18px;\r\n    line-height: 30px;\r\n    letter-spacing: -0.36px;\r\n    font-weight: 400;\r\n    text-transform: uppercase;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst StyledText = styled.p`\r\n    color: #3C3C3C;\r\n    font-size: 16px;\r\n    line-height: 18px;\r\n    letter-spacing: -0.32px;\r\n    font-family: ${({ theme }) => theme.Merriweather};\r\n    font-weight: 300;\r\n`;\r\n\r\nconst Statistic = () => {\r\n    return (\r\n        <StyledStatistic>\r\n            <StyledColumn>\r\n                <StyledNumber>10</StyledNumber>\r\n                <StyledTitle>Oddanych worków</StyledTitle>\r\n                <StyledText>Lorem ipsum dolor sit amet, consectetur adipisc Pellentesque vel enim a elit viverra elementuma. Aliquam erat volutpat.</StyledText>\r\n            </StyledColumn>\r\n            <StyledColumn>\r\n                <StyledNumber>5</StyledNumber>\r\n                <StyledTitle>Wspartych organizacji</StyledTitle>\r\n                <StyledText>Lorem ipsum dolor sit amet, consectetur adipisc Pellentesque vel enim a elit viverra elementuma. Aliquam erat volutpat.</StyledText>\r\n            </StyledColumn>\r\n            <StyledColumn>\r\n                <StyledNumber>7</StyledNumber>\r\n                <StyledTitle>Zorganizowanych zbiórek</StyledTitle>\r\n                <StyledText>Lorem ipsum dolor sit amet, consectetur adipisc Pellentesque vel enim a elit viverra elementuma. Aliquam erat volutpat.</StyledText>\r\n            </StyledColumn>\r\n        </StyledStatistic>\r\n    )\r\n}\r\n\r\nexport default Statistic;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport icon1 from '../../assets/Icon-1.svg';\r\nimport icon2 from '../../assets/Icon-2.svg';\r\nimport icon3 from '../../assets/Icon-3.svg';\r\nimport icon4 from '../../assets/Icon-4.svg';\r\n\r\nconst StyledIconsWrapper = styled.div`\r\n    width: 100%;\r\n    height: 325px;\r\n    display: flex;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n`;\r\n\r\nconst StyledIconCard = styled.div`\r\n    width: 164px;\r\n    height: 190px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    text-align: center;\r\n`;\r\n\r\nconst StyledIcon = styled.img`\r\n    width: 83px;\r\n    height: 83px;\r\n`;\r\n\r\nconst StyledTitle = styled.h3`\r\n    font-size: 18px;\r\n    line-height: 24px;\r\n    font-weight: 400;\r\n`;\r\n\r\nconst StyledSpan = styled.span`\r\n    display: block;\r\n    width: 85px;\r\n    border: 1px solid #707070;\r\n`;\r\n\r\nconst Styledtext = styled.h4`\r\n    font-size: 16px;\r\n    font-weight: 400;\r\n`;\r\n\r\nconst IconsCards = () => {\r\n    return (\r\n        <StyledIconsWrapper>\r\n            <StyledIconCard>\r\n                <StyledIcon src={icon1} />\r\n                <StyledTitle>\r\n                    Wybierz rzeczy\r\n                </StyledTitle>\r\n                <StyledSpan />\r\n                <Styledtext>\r\n                    ubrania, zabawki, sprzęt i inne\r\n\r\n                </Styledtext>\r\n            </StyledIconCard>\r\n            <StyledIconCard>\r\n                <StyledIcon src={icon2} />\r\n                <StyledTitle>\r\n                    Spakuj je\r\n                </StyledTitle>\r\n                <StyledSpan />\r\n                <Styledtext>\r\n                    skorzystaj z worków na śmieci\r\n                </Styledtext>\r\n            </StyledIconCard>\r\n            <StyledIconCard>\r\n                <StyledIcon src={icon3} />\r\n                <StyledTitle>\r\n                    Zdecyduj komu chcesz pomóc\r\n                </StyledTitle>\r\n                <StyledSpan />\r\n                <Styledtext>\r\n                    wybierz zaufane miejsce\r\n\r\n                </Styledtext>\r\n            </StyledIconCard>\r\n            <StyledIconCard>\r\n                <StyledIcon src={icon4} />\r\n                <StyledTitle>\r\n                    Zamów kuriera\r\n                </StyledTitle>\r\n                <StyledSpan />\r\n                <Styledtext>\r\n                    kurier przyjedzie w dogodnym terminie\r\n                </Styledtext>\r\n            </StyledIconCard>\r\n        </StyledIconsWrapper >\r\n    )\r\n}\r\n\r\nexport default IconsCards;","import React from 'react';\r\nimport decoration from '../assets/Decoration.svg';\r\n\r\nconst Decoration = () => {\r\n    return (\r\n        <img src={decoration} alt=\"decoration\" />\r\n    )\r\n}\r\n\r\nexport default Decoration;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Button from '../Button';\r\nimport IconsCards from './IconsCards';\r\nimport Decoration from '../Decoration';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst StyledSteps = styled.div`\r\n    width: 100%;\r\n    height: 625px;\r\n    margin-top: 55px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n`;\r\n\r\nconst StyledTitle = styled.div`\r\n    font-size: 38px;\r\n    line-height: 55px;\r\n    letter-spacing: -0.76px;\r\n    font-weight: 400;\r\n`;\r\n\r\nconst Steps = () => {\r\n    return (\r\n        <StyledSteps>\r\n            <StyledTitle>\r\n                Wystarczą 4 proste kroki\r\n            </StyledTitle>\r\n            <Decoration />\r\n            <IconsCards />\r\n            <NavLink to='/logowanie'>\r\n                <Button texttransform=\"uppercase\">\r\n                    Oddaj rzeczy\r\n            </Button>\r\n            </NavLink>\r\n        </StyledSteps>\r\n    )\r\n}\r\n\r\nexport default Steps;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport people from '../../assets/People.jpg';\r\nimport signature from '../../assets/Signature.svg';\r\nimport Decoration from '../Decoration';\r\n\r\nconst StyledAbout = styled.div`\r\n    width: 100%;\r\n    height: 100vh;\r\n    margin-top: 80px;\r\n    display: flex;\r\n`;\r\n\r\nconst StyledAboutContent = styled.div`\r\n    width: 50%;\r\n    height: auto;\r\n    font-weight: 400;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    text-align: center;\r\n`;\r\n\r\nconst StyledAboutContentWrapper = styled.div`\r\n    width: 655px;\r\n    height: 80%;\r\n    margin: 0 auto;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-evenly;\r\n    align-items: center;\r\n    position: relative;\r\n`;\r\n\r\nconst StyledAboutTitle = styled.h3`\r\n    font-size: 38px;\r\n    line-height: 55px;\r\n    letter-spacing: -0.76px;\r\n`\r\n\r\nconst StyledAboutText = styled.p`\r\n    font-size: 30px;\r\n    line-height: 54px;\r\n    letter-spacing: -0.6px;\r\n`;\r\n\r\nconst StyledSignature = styled.img`\r\nposition: absolute;\r\nbottom: 0;\r\nright: 0;\r\n\r\n`;\r\n\r\nconst StyledAboutImage = styled.div`\r\n    width: 50%;\r\n    background-image: url(${people});\r\n    background-size: cover;\r\n    background-position: center;\r\n`;\r\n\r\nconst About = () => {\r\n    return (\r\n        <StyledAbout>\r\n            <StyledAboutContent>\r\n                <StyledAboutContentWrapper>\r\n                    <StyledAboutTitle>\r\n                        O nas\r\n                    </StyledAboutTitle>\r\n                    <Decoration />\r\n                    <StyledAboutText>\r\n                        Nori grape silver beet broccoli kombu beet greens fava bean potato quandong celery. Bunya nuts black-eyed pea prairie turnip leek lentil turnip greens parsnip.\r\n                    </StyledAboutText>\r\n                    <div style={{ height: \"150px\" }}>\r\n                        <StyledSignature src={signature} alt=\"signature\" />\r\n                    </div>\r\n                </StyledAboutContentWrapper>\r\n            </StyledAboutContent>\r\n            <StyledAboutImage />\r\n        </StyledAbout>\r\n    )\r\n}\r\n\r\nexport default About;\r\n","const ADD_FOUNDATION = 'ADD_FOUNDATION';\r\nconst RESET_FOUNDATIONS = 'RESET_FOUNDATIONS';\r\nconst CLEAR = \"Clear list\";\r\nconst SET_CURRENT_FUNDATION = \"Set current fundation\"\r\n\r\nexport default {\r\n    ADD_FOUNDATION,\r\n    RESET_FOUNDATIONS,\r\n    CLEAR,\r\n    SET_CURRENT_FUNDATION\r\n};","import types from './types';\r\n\r\nconst add = item => ({\r\n    type: types.ADD_FOUNDATION,\r\n    payload: item\r\n});\r\n\r\nconst reset = () => ({\r\n    type: types.RESET_FOUNDATIONS\r\n});\r\n\r\nexport default {\r\n    add,\r\n    reset\r\n};","import actions from './actions';\r\nimport types from './types'\r\n\r\nconst fetchData = async () => {\r\n    const response = await fetch(`https://api.jsonbin.io/b/5ec55e98e91d1e45d10df5e0`,\r\n        {\r\n            method: 'GET'\r\n        }\r\n    );\r\n    const json = await response.json();\r\n    return json.foundations;\r\n}\r\n\r\nexport const clear = () => ({\r\n    type: types.CLEAR\r\n})\r\n\r\nexport const getCurrentFundation = fundation => ({\r\n    type: types.SET_CURRENT_FUNDATION,\r\n    payload: fundation\r\n})\r\n\r\nexport const getAllData = () =>\r\n    async (dispatch) => {\r\n        const foundations = await fetchData();\r\n        dispatch(actions.add(foundations))\r\n    }\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledNav = styled.nav`\r\n    width: 150px;\r\n    height: 50px;\r\n    margin: 65px auto 0;\r\n`;\r\n\r\nconst StyledNavList = styled.ul`\r\n    display: flex;\r\n`;\r\n\r\nconst StyledNavListElement = styled.li`\r\n    border: 1px solid transparent;\r\n    \r\n    &:hover {\r\n        background: #ddd;\r\n    }\r\n    &:active {\r\n        border: 1px solid #707070;\r\n        color: red;\r\n    }\r\n`;\r\n\r\nconst StyledNavListLink = styled.a`\r\n    text-decoration: none;\r\n    font-size: 18px;\r\n    line-height: 24px;\r\n    color: #3C3C3C;\r\n    padding: 0 10px;\r\n`\r\n\r\nconst Pagination = ({ foundationPerPage, totalFoundations, paginate }) => {\r\n    const foundationNumbers = [];\r\n\r\n    for (let i = 1; i <= Math.ceil(totalFoundations / foundationPerPage); i++) {\r\n        foundationNumbers.push(i);\r\n    }\r\n\r\n    return (\r\n        <StyledNav>\r\n            <StyledNavList>\r\n                {\r\n                    foundationNumbers.map(number => (\r\n                        <StyledNavListElement key={number}>\r\n                            <StyledNavListLink href=\"!#\" onClick={(e) => {\r\n                                e.preventDefault()\r\n                                paginate(number)\r\n                            }} >\r\n                                {foundationNumbers.length > 1 && number}\r\n                            </StyledNavListLink>\r\n                        </StyledNavListElement>\r\n                    ))\r\n                }\r\n            </StyledNavList>\r\n        </StyledNav>\r\n    )\r\n}\r\n\r\nexport default Pagination;","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport Decoration from '../Decoration';\r\nimport Button from '../Button';\r\n// import FoundationsContainer from './FoundationsContainer';\r\nimport { getAllData, getCurrentFundation } from '../../redux/foundations/operations';\r\nimport Pagination from './Pagination';\r\nimport { connect } from 'react-redux';\r\n\r\nconst StyledWhoWeHelpContainer = styled.div`\r\n    max-width: 1344px;\r\n    margin: 30px auto 0;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n`;\r\n\r\nconst StyledTitle = styled.div`\r\n    font-size: 38px;\r\n    line-height: 55px;\r\n    letter-spacing: -0.76px;\r\n    font-weight: 400;\r\n    margin-bottom: 50px;\r\n`;\r\n\r\nconst StyledNavigation = styled.div`\r\n    width: 800px;\r\n    display: flex;\r\n    justify-content: space-around;\r\n    margin-top: 50px;\r\n`;\r\n\r\nconst StyledButton = styled(Button)`\r\n    width: 208px;\r\n    height: 79px;\r\n    font-size: 24px;\r\n    line-height: 24px;\r\n`;\r\n\r\nconst StyledContent = styled.div`\r\n    width: 1344px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n`;\r\n\r\nconst StyledContentTitle = styled.h3`\r\n    font-size: 22px;\r\n    line-height: 30px;\r\n    width: 640px;\r\n    text-align: center;\r\n    margin: 70px auto 50px;\r\n`;\r\n\r\nconst StyledList = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\n// FoundationsContainer\r\n\r\nconst StyledFoundationsContainer = styled.div`\r\n`;\r\n\r\nconst StyledListElement = styled.li`\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 30px 0;\r\n    border-bottom: 1px solid #707070;\r\n`;\r\n\r\nconst StyledListElementLeft = styled.div`\r\n\r\n`;\r\n\r\nconst StyledName = styled.p`\r\n    font-size: 24px;\r\n    line-height: 29px;\r\n    font-family: ${({ theme }) => theme.Merriweather};\r\n    font-weight: 300;\r\n    margin-bottom: 5px;\r\n`;\r\n\r\nconst StyledMission = styled.p`\r\n    font-size: 16px;\r\n    line-height: 20px;\r\n    font-family: ${({ theme }) => theme.Merriweather};\r\n    font-weight: 300;\r\n    font-style: italic;\r\n`;\r\n\r\nconst StyledThings = styled.p`\r\n    font-size: 16px;\r\n    line-height: 20px;\r\n    font-family: ${({ theme }) => theme.Merriweather};\r\n    font-weight: 300;\r\n`;\r\n\r\nconst WhoWeHelp = ({ current, getAllData, clear, getThingsFromState }) => {\r\n\r\n    // States for pagination\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [foundationPerPage] = useState(3);\r\n\r\n    useEffect(() => {\r\n        getAllData();\r\n        // return () => clear()\r\n    }, [])\r\n\r\n    const handleClickFound = () => {\r\n        getThingsFromState(\"foundation\");\r\n    }\r\n\r\n    const handleClickORG = () => {\r\n        getThingsFromState(\"organizations\");\r\n    }\r\n\r\n    const handleClickLocals = () => {\r\n        getThingsFromState(\"locals\");\r\n    }\r\n\r\n    // Get current foundations\r\n    const indexOfLastFoundation = currentPage * foundationPerPage;\r\n    const indexOfFirstFoundation = indexOfLastFoundation - foundationPerPage;\r\n    const currentFoundations = current?.items?.slice(indexOfFirstFoundation, indexOfLastFoundation) || [];\r\n\r\n    // Change page\r\n    const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n    return (\r\n        <StyledWhoWeHelpContainer>\r\n            {/* <MoviesForm /> */}\r\n            <StyledTitle>\r\n                Komu pomagamy?\r\n            </StyledTitle>\r\n            <Decoration />\r\n            <StyledNavigation>\r\n                <StyledButton onClick={handleClickFound}>\r\n                    Fundacjom\r\n                </StyledButton >\r\n                <StyledButton onClick={handleClickORG}>\r\n                    Organizacjom pozarządowym\r\n                </StyledButton>\r\n                <StyledButton onClick={handleClickLocals}>\r\n                    Lokalnym zbiórkom\r\n                </StyledButton>\r\n            </StyledNavigation>\r\n            <StyledContent>\r\n                <StyledContentTitle>\r\n                    {current?.desc}\r\n                </StyledContentTitle>\r\n                <StyledList>\r\n                    <StyledFoundationsContainer>\r\n                        <ul>\r\n                            {currentFoundations.map(({ header, mission, things }, i) => <StyledListElement key={i}>\r\n                                <StyledListElementLeft>\r\n                                    <StyledName>\r\n                                        {header}\r\n                                    </StyledName>\r\n                                    <StyledMission>\r\n                                        Cel i misja: {mission}\r\n                                    </StyledMission>\r\n                                </StyledListElementLeft>\r\n                                <StyledThings>\r\n                                    {things}\r\n                                </StyledThings>\r\n                            </StyledListElement>\r\n                            )}\r\n                        </ul>\r\n                        <Pagination foundationPerPage={foundationPerPage} totalFoundations={current?.items?.length} paginate={paginate} />\r\n                    </StyledFoundationsContainer>\r\n                </StyledList>\r\n            </StyledContent>\r\n        </StyledWhoWeHelpContainer>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({ foundations }) => ({ current: foundations.current })\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    getAllData: () => dispatch(getAllData()),\r\n    // clear: () => dispatch(clear()),\r\n    getThingsFromState: fundation => dispatch(getCurrentFundation(fundation))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(WhoWeHelp)","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport background from '../../assets/Background-Contact-Form.jpg'\r\nimport Decoration from '../Decoration';\r\nimport Button from '../Button';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\n\r\nconst StyledContact = styled.div`\r\n    margin-top: 30px;\r\n    width: 100%;\r\n    height: 100vh;\r\n    background-image: url(${background});\r\n    background-size: cover;\r\n    background-position: center;\r\n    position: relative;\r\n`;\r\n\r\nconst StyledFormWrapper = styled.div`\r\n    width: 50vw;\r\n    height: 100%;\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nconst StyledFormContent = styled.div`\r\n    width: 80%;\r\n    height: 60%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n`;\r\n\r\nconst StyledTitle = styled.div`\r\n    font-size: 38px;\r\n    line-height: 55px;\r\n    letter-spacing: -0.76px;\r\n    font-weight: 400;\r\n`;\r\n\r\nconst StyledForm = styled(Form)`\r\n    position: relative;\r\n`;\r\n\r\nconst StyledFormTopInputs = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n`;\r\n\r\nconst StyledFormName = styled.div`\r\n    margin-right: 7px;\r\n    position: relative;\r\n`;\r\n\r\nconst StyledFormEmail = styled.div`\r\n    margin-left: 7px;\r\n    position: relative;\r\n`;\r\n\r\nconst StyledFormMessage = styled.div`\r\n    position: relative;\r\n`;\r\n\r\nconst StyledLabel = styled.label`\r\n    font-size: 16px;\r\n    line-height: 55px;\r\n    font-weight: 600;\r\n`;\r\n\r\nconst StyledField = styled(Field)`\r\n    border: none;\r\n    border-bottom: 1px solid #707070;\r\n    background: transparent;\r\n    font-size: 16px;\r\n    color: #272727;\r\n    font-family: ${({ theme }) => theme.OpenSans};\r\n    font-weight: 700;\r\n`;\r\n\r\nconst StyledTextarea = styled(StyledField)`\r\n    width: 100%;\r\n    resize: none;\r\n    margin-bottom: 100px;\r\n`;\r\n\r\nconst StyledButton = styled(Button)`\r\n    width: 150px;\r\n    height: 50px;\r\n    font-family: ${({ theme }) => theme.OpenSans};\r\n    font-weight: 300;\r\n    font-size: 16px;\r\n    line-height: 32px;\r\n    position: absolute;\r\n    bottom: 0;\r\n    right: 0;\r\n`;\r\n\r\nconst StyledErrorMessage = styled(ErrorMessage)`\r\n    color: red;\r\n    font-size: 10px;\r\n    position: absolute;\r\n    top: 40px;\r\n    left: 0;\r\n`;\r\n\r\nconst Contact = () => {\r\n\r\n    return (\r\n        <StyledContact>\r\n            <StyledFormWrapper>\r\n                <StyledFormContent>\r\n                    <StyledTitle>\r\n                        Skontaktuj się z nami\r\n                    </StyledTitle>\r\n                    <Decoration />\r\n                    <Formik\r\n                        initialValues={{\r\n                            name: '',\r\n                            email: '',\r\n                            message: ''\r\n                        }}\r\n                        validate={values => {\r\n                            const errors = {};\r\n                            if (!values.name) {\r\n                                errors.name = \"Imię wymagane\"\r\n                            }\r\n                            if (/\\s/.test(values.name)) {\r\n                                errors.name = \"Imię nie może zawierać żadnej spacji\"\r\n                            } else if (\r\n                                !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n                            ) {\r\n                                errors.email = \"Niepoprawny adres email\";\r\n                            }\r\n                            else if (values.message.length < 120) {\r\n                                errors.message = \"Wiadomość musi mieć co najmniej 120 znaków\"\r\n                            }\r\n                            return errors;\r\n                        }}\r\n                        onSubmit={(data, { setSubmitting, resetForm }) => {\r\n                            setSubmitting(true)\r\n                            fetch('https://fer-api.coderslab.pl/v1/portfolio/contact', {\r\n                                method: \"POST\",\r\n                                headers: {\r\n                                    \"Content-Type\": \"application/json\"\r\n                                },\r\n                                body: JSON.stringify(data)\r\n                            })\r\n                            setSubmitting(false)\r\n                            resetForm()\r\n                        }}>\r\n                        {\r\n                            ({\r\n                                isSubmitting,\r\n                            }) => (\r\n                                    <StyledForm>\r\n                                        <StyledFormTopInputs>\r\n                                            <StyledFormName>\r\n                                                <StyledLabel>\r\n                                                    Wpisz swoje imię\r\n                                                </StyledLabel><br />\r\n                                                <StyledField\r\n                                                    name=\"name\"\r\n                                                    type=\"input\"\r\n                                                />\r\n                                                <StyledErrorMessage\r\n                                                    name=\"name\"\r\n                                                    component=\"span\"\r\n                                                />\r\n                                            </StyledFormName>\r\n                                            <StyledFormEmail>\r\n                                                <StyledLabel>\r\n                                                    Wpisz swój email\r\n                                                </StyledLabel><br />\r\n                                                <StyledErrorMessage\r\n                                                    name=\"email\"\r\n                                                    component=\"div\"\r\n                                                />\r\n                                                <StyledField\r\n                                                    name=\"email\"\r\n                                                    type=\"input\"\r\n                                                />\r\n                                            </StyledFormEmail>\r\n                                        </StyledFormTopInputs>\r\n                                        <StyledFormMessage>\r\n                                            <StyledLabel>\r\n                                                Wpisz swoją wiadomość\r\n                                        </StyledLabel><br />\r\n                                            <StyledErrorMessage\r\n                                                name=\"message\"\r\n                                                component=\"div\"\r\n                                            />\r\n                                            <StyledTextarea\r\n                                                rows=\"5\"\r\n                                                name=\"message\"\r\n                                                component=\"textarea\"\r\n                                            />\r\n                                        </StyledFormMessage>\r\n                                        <StyledButton\r\n                                            disabled={isSubmitting}\r\n                                            type=\"submit\">\r\n                                            Wyślij\r\n                                        </StyledButton>\r\n                                    </StyledForm>\r\n                                )\r\n                        }\r\n                    </Formik>\r\n                </StyledFormContent>\r\n            </StyledFormWrapper>\r\n        </StyledContact>\r\n    )\r\n}\r\n\r\nexport default Contact;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport instagram from '../../assets/Instagram.svg';\r\nimport facebook from '../../assets/Facebook.svg';\r\n\r\nconst StyledFooter = styled.footer`\r\n    width: 100%;\r\n    height: 50px;\r\n    margin-top: 20px;\r\n    padding: 0 20px;\r\n    text-align: center;\r\n    position: relative;\r\n`;\r\n\r\nconst StyledParagraph = styled.p`\r\n    font-size: 18px;\r\n    line-height: 24px;\r\n`;\r\n\r\nconst StyledLinksWrapper = styled.div`\r\n    width: 200px;\r\n    height: 50px;\r\n    position: absolute;\r\n    right: 0;\r\n    top: 0;\r\n`;\r\n\r\nconst StyledLink = styled.a`\r\n    margin: 10px;\r\n`;\r\n\r\nconst StyledLinkIcon = styled.img`\r\n    \r\n`;\r\n\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <StyledFooter>\r\n            <StyledParagraph>\r\n                Copyright by Coders Lab\r\n            </StyledParagraph>\r\n            <StyledLinksWrapper>\r\n                <StyledLink href=\"#\">\r\n                    <StyledLinkIcon src={facebook} alt=\"facebook\" />\r\n                </StyledLink>\r\n                <StyledLink href=\"#\">\r\n                    <StyledLinkIcon src={instagram} alt=\"instagram\" />\r\n                </StyledLink>\r\n            </StyledLinksWrapper>\r\n        </StyledFooter>\r\n    )\r\n}\r\n\r\nexport default Footer;\r\n","import Homepage from './Homepage';\r\n\r\nexport default Homepage;","import React from 'react';\r\nimport { Element } from 'react-scroll';\r\nimport Welcome from '../Welcome/Welcome';\r\nimport Statistic from '../Statistic/Statistic';\r\nimport Steps from '../Steps/Steps';\r\nimport About from '../About/About';\r\nimport WhoWeHelp from '../WhoWeHelp/WhoWeHelp';\r\nimport Contact from '../Contact/Contact';\r\nimport Footer from '../Footer/Footer';\r\n\r\nconst Homepage = () => {\r\n    return (\r\n        <>\r\n            <Welcome />\r\n            <Statistic />\r\n            <Element id=\"section\" >\r\n                <Steps />\r\n            </Element>\r\n            <Element id=\"about\" >\r\n                <About />\r\n            </Element>\r\n            <Element id=\"whowehelp\" >\r\n                <WhoWeHelp />\r\n            </Element>\r\n            <Element id=\"contact\" >\r\n                <Contact />\r\n            </Element>\r\n            <Footer />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Homepage;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledNotFound = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\nconst NotFound = () => {\r\n    return (\r\n        <StyledNotFound>\r\n            Error 404, page not found...\r\n        </StyledNotFound>\r\n    )\r\n}\r\n\r\nexport default NotFound;","import { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n\r\n    *, *::before, *::after {\r\n        box-sizing: border-box;\r\n        -webkit-font-smoothing: antialiased;\r\n        -moz-osx-font-smoothing: grayscale; \r\n        margin: 0;\r\n        padding: 0;\r\n    }\r\n\r\n    /* happy rems */\r\n\r\n    html {\r\n        font-size: 62.5%;\r\n        color: #3C3C3C;\r\n        font-weight: 400;\r\n        scroll-behavior: smooth;\r\n    }\r\n\r\n    body {\r\n        font-size: 1.6rem;\r\n        font-family: 'Open Sans', sans-serif;\r\n    }\r\n\r\n    li {\r\n        list-style: none;\r\n    }\r\n\r\n`;\r\n\r\nexport default GlobalStyle;","export const theme = {\r\n    white: \"#fff\",\r\n    grey: \"#3C3C3C\",\r\n    yellow: \"#FAD648\",\r\n    OpenSans: \"'Open Sans', sans-serif\",\r\n    Merriweather: \"'Merriweather', serif\",\r\n}","import React from 'react';\r\nimport GlobalStyle from './../theme/GlobalStyle';\r\nimport { theme } from './../theme/mainTheme';\r\nimport { ThemeProvider } from 'styled-components';\r\n// import Header from './../components/Header';\r\n\r\nconst MainTemplate = ({ children }) => {\r\n    return (\r\n        <div>\r\n            <GlobalStyle />\r\n            <ThemeProvider theme={theme}>\r\n                <>\r\n                    {children}\r\n                </>\r\n            </ThemeProvider>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainTemplate;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Decoration from '../Decoration';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport { auth, createUserProfileDocument } from '../../firebase/firebase.utils';\r\n\r\nconst StyledLoginWrapper = styled.div`\r\n    width: 100%;\r\n    height: 100vh;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nconst StyledLoginContent = styled.div`\r\n    width: 500px;\r\n    height: 650px;\r\n    display: grid;\r\n\r\n    @media (max-width: 1366px) {\r\n        height: 550px\r\n    }\r\n`;\r\n\r\nconst StyledLoginContentTop = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nconst StyledTitle = styled.div`\r\n    font-size: 38px;\r\n    line-height: 55px;\r\n    letter-spacing: -0.76px;\r\n    font-weight: 400;\r\n    margin-bottom: 50px;\r\n`;\r\n\r\nconst StyledLoginContentBottom = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    position: relative;\r\n`;\r\n\r\nconst StyledForm = styled(Form)`\r\n`;\r\n\r\nconst StyledFormEmail = styled.div`\r\n    position: relative;\r\n`;\r\n\r\nconst StyledFormPassword = styled.div`\r\n    position: relative;\r\n`;\r\n\r\nconst StyledFormPasswordRepeat = styled.div`\r\n    position: relative;\r\n`;\r\n\r\nconst StyledField = styled(Field)`\r\n    border: none;\r\n    border-bottom: 1px solid #707070;\r\n    background: transparent;\r\n    font-size: 16px;\r\n    color: #272727;\r\n    font-family: ${({ theme }) => theme.OpenSans};\r\n    font-weight: 700;\r\n`;\r\n\r\nconst StyledErrorMessage = styled(ErrorMessage)`\r\n    color: red;\r\n    font-size: 10px;\r\n    position: absolute;\r\n    top: 40px;\r\n    left: 0;\r\n`;\r\n\r\nconst StylednNavLink = styled(NavLink)`\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: 0;\r\n    color: #000;\r\n    font-weight: 300;\r\n    font-size: 18px;\r\n    line-height: 32px;\r\n    text-decoration: none;\r\n    padding: 13px;\r\n`;\r\n\r\nconst StyledButton = styled.button`\r\n    position: absolute;\r\n    bottom: 0;\r\n    right: 0;\r\n    padding: 13px;\r\n    background: transparent;\r\n    color: #000;\r\n    font-family: ${({ theme }) => theme.OpenSans};\r\n    font-weight: 300;\r\n    font-size: 18px;\r\n    line-height: 32px;\r\n    text-decoration: none;\r\n    border: 0.75px solid #3c3c3c;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst StyledLabel = styled.label`\r\n    font-size: 16px;\r\n    line-height: 55px;\r\n    font-weight: 600;\r\n`;\r\n\r\nconst Register = (props) => {\r\n    return (\r\n        <StyledLoginWrapper>\r\n            <StyledLoginContent>\r\n                <StyledLoginContentTop>\r\n                    <StyledTitle>\r\n                        Załóż konto\r\n                    </StyledTitle>\r\n                    <Decoration />\r\n                </StyledLoginContentTop>\r\n                <StyledLoginContentBottom>\r\n                    <Formik\r\n                        initialValues={{\r\n                            email: '',\r\n                            password: '',\r\n                            passwordRepeat: ''\r\n                        }}\r\n                        validate={values => {\r\n                            const errors = {};\r\n                            if (!values.email) {\r\n                                errors.email = \"Email wymagany\"\r\n                            } else if (\r\n                                !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n                            ) {\r\n                                errors.email = \"Niepoprawny adres email\";\r\n                            } else if (/\\s/.test(values.email)) {\r\n                                errors.email = \"Email nie może zawierać żadnej spacji\"\r\n                            } else if (!values.password) {\r\n                                errors.password = \"Podaj hasło\"\r\n                            } else if (/\\s/.test(values.password)) {\r\n                                errors.password = \"Hasło nie może zawierać żadnej spacji\"\r\n                            } else if (values.password.length <= 5) {\r\n                                errors.password = \"Hasło musi zawierać więcej niż 5 znaków\"\r\n                            } else if (values.passwordRepeat !== values.password) {\r\n                                errors.passwordRepeat = \"Hasło nie pasuje do poprzedniego\"\r\n                            }\r\n                            return errors;\r\n                        }}\r\n                        onSubmit={async (data, { setSubmitting, resetForm }) => {\r\n                            setSubmitting(true)\r\n                            const { email, password } = data;\r\n                            try {\r\n                                const { user } = await auth.createUserWithEmailAndPassword(email, password);\r\n                                await createUserProfileDocument(user);\r\n                                props.history.push('/');\r\n\r\n                            } catch (error) {\r\n                                alert(error)\r\n                                console.error(error);\r\n                            }\r\n\r\n                            setSubmitting(false)\r\n                            resetForm()\r\n\r\n                        }}\r\n                    >\r\n                        {\r\n                            ({ isSubmitting }) => (\r\n                                <StyledForm>\r\n                                    <StyledFormEmail>\r\n                                        <StyledLabel>\r\n                                            Email\r\n                                    </StyledLabel><br />\r\n                                        <StyledField\r\n                                            name=\"email\"\r\n                                            type=\"input\"\r\n                                        />\r\n                                        <StyledErrorMessage\r\n                                            name=\"email\"\r\n                                            component=\"span\"\r\n                                        />\r\n                                    </StyledFormEmail>\r\n                                    <StyledFormPassword>\r\n                                        <StyledLabel>\r\n                                            Hasło\r\n                                    </StyledLabel><br />\r\n                                        <StyledField\r\n                                            name=\"password\"\r\n                                            type=\"password\"\r\n                                        />\r\n                                        <StyledErrorMessage\r\n                                            name=\"password\"\r\n                                            component=\"span\"\r\n                                        />\r\n                                    </StyledFormPassword>\r\n                                    <StyledFormPasswordRepeat>\r\n                                        <StyledLabel>\r\n                                            Powtórz hasło\r\n                                    </StyledLabel><br />\r\n                                        <StyledField\r\n                                            name=\"passwordRepeat\"\r\n                                            type=\"password\"\r\n                                        />\r\n                                        <StyledErrorMessage\r\n                                            name=\"passwordRepeat\"\r\n                                            component=\"span\"\r\n                                        />\r\n                                    </StyledFormPasswordRepeat>\r\n                                    <StylednNavLink to='/logowanie'>\r\n                                        Zaloguj się\r\n                                    </StylednNavLink>\r\n                                    <StyledButton\r\n                                        disabled={isSubmitting}\r\n                                        type=\"submit\">\r\n                                        Załóż konto\r\n                                    </StyledButton>\r\n                                </StyledForm>\r\n                            )\r\n                        }\r\n                    </Formik>\r\n                </StyledLoginContentBottom>\r\n            </StyledLoginContent>\r\n        </StyledLoginWrapper>\r\n    )\r\n}\r\n\r\nexport default withRouter(Register);","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport Decoration from '../Decoration';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { auth, signInWithGoogle } from '../../firebase/firebase.utils';\r\n\r\nconst StyledLoginWrapper = styled.div`\r\n    width: 100%;\r\n    height: 100vh;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nconst StyledLoginContent = styled.div`\r\n    width: 500px;\r\n    height: 650px;\r\n    display: grid;\r\n    align-content: space-around;\r\n\r\n    @media (max-width: 1366px) {\r\n        height: 550px\r\n    }\r\n`;\r\n\r\nconst StyledLoginContentTop = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nconst StyledTitle = styled.div`\r\n    font-size: 38px;\r\n    line-height: 55px;\r\n    letter-spacing: -0.76px;\r\n    font-weight: 400;\r\n    margin-bottom: 50px;\r\n`;\r\n\r\nconst StyledLoginContentBottom = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n`;\r\n\r\nconst StyledForm = styled(Form)`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n`;\r\n\r\nconst StyledFormTopWrapper = styled.div`\r\n    \r\n`;\r\n\r\nconst StyledFormEmail = styled.div`\r\n    position: relative;\r\n`;\r\n\r\nconst StyledFormPassword = styled.div`\r\n    position: relative;\r\n`;\r\n\r\nconst StyledField = styled(Field)`\r\n    border: none;\r\n    border-bottom: 1px solid #707070;\r\n    background: transparent;\r\n    font-size: 16px;\r\n    color: #272727;\r\n    font-family: ${({ theme }) => theme.OpenSans};\r\n    font-weight: 700;\r\n`;\r\n\r\nconst StyledErrorMessage = styled(ErrorMessage)`\r\n    color: red;\r\n    font-size: 10px;\r\n    position: absolute;\r\n    top: 40px;\r\n    left: 0;\r\n`;\r\n\r\nconst StyledButtonsWrapper = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding-top: 80px;\r\n`;\r\n\r\nconst StylednNavLink = styled(NavLink)`\r\n    color: #000;\r\n    font-weight: 300;\r\n    font-size: 18px;\r\n    line-height: 32px;\r\n    text-decoration: none;\r\n    padding: 13px;\r\n`;\r\n\r\nconst StylednNavLinkHome = styled(NavLink)`\r\n    width: 150px;\r\n    height: 50px;\r\n    border: 1px solid black;\r\n    color: #000;\r\n    font-weight: 300;\r\n    font-size: 18px;\r\n    text-decoration: none;\r\n    padding: 13px;\r\n`;\r\n\r\nconst StyledButton = styled.button`\r\n    padding: 13px;\r\n    background: transparent;\r\n    color: #000;\r\n    font-family: ${({ theme }) => theme.OpenSans};\r\n    font-weight: 300;\r\n    font-size: 18px;\r\n    line-height: 32px;\r\n    text-decoration: none;\r\n    border: 0.75px solid #3c3c3c;\r\n    cursor: pointer;\r\n\r\n    ${({ isGoogleSignIn }) =>\r\n        isGoogleSignIn &&\r\n        css`\r\n        color: #4285f4;\r\n        border: 0.75px solid #4285f4; \r\n    `}\r\n`;\r\n\r\nconst StyledLabel = styled.label`\r\n    font-size: 16px;\r\n    line-height: 55px;\r\n    font-weight: 600;\r\n`;\r\n\r\nconst StyledLoginSucces = styled.div`\r\n    height: 300px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n`;\r\n\r\nconst Login = ({ currentUser }) => {\r\n\r\n    const isLoggedIn = currentUser?.email;\r\n\r\n    return (\r\n        <StyledLoginWrapper>\r\n            {\r\n                isLoggedIn ? <StyledLoginSucces>\r\n                    <StyledTitle>\r\n                        Pomyślnie zalogowano!\r\n                </StyledTitle>\r\n                    <Decoration />\r\n                    <StylednNavLinkHome\r\n                        to='/'\r\n                    >\r\n                        Strona Główna\r\n                </StylednNavLinkHome>\r\n                </StyledLoginSucces>\r\n                    :\r\n                    <StyledLoginContent>\r\n                        <StyledLoginContentTop>\r\n                            <StyledTitle>\r\n                                Zaloguj się\r\n                            </StyledTitle>\r\n                            <Decoration />\r\n                        </StyledLoginContentTop>\r\n                        <StyledLoginContentBottom>\r\n                            <Formik\r\n                                initialValues={{\r\n                                    email: '',\r\n                                    password: ''\r\n                                }}\r\n                                validate={values => {\r\n                                    const errors = {};\r\n                                    if (!values.email) {\r\n                                        errors.email = \"Email wymagany\"\r\n                                    } else if (\r\n                                        !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n                                    ) {\r\n                                        errors.email = \"Niepoprawny adres email\";\r\n                                    } else if (/\\s/.test(values.email)) {\r\n                                        errors.email = \"Email nie może zawierać żadnej spacji\"\r\n                                    } else if (!values.password) {\r\n                                        errors.password = \"Podaj hasło\"\r\n                                    } else if (/\\s/.test(values.password)) {\r\n                                        errors.password = \"Hasło nie może zawierać żadnej spacji\"\r\n                                    }\r\n                                    return errors;\r\n                                }}\r\n                                onSubmit={async (data, { setSubmitting, resetForm }) => {\r\n                                    setSubmitting(true);\r\n\r\n                                    const { email, password } = data;\r\n\r\n                                    try {\r\n                                        await auth.signInWithEmailAndPassword(email, password);\r\n                                    } catch (error) {\r\n                                        alert(error);\r\n                                        console.error(error);\r\n                                    }\r\n\r\n                                    setSubmitting(false);\r\n                                    resetForm();\r\n                                }}\r\n                            >\r\n                                {\r\n                                    ({ isSubmitting }) => (\r\n                                        <StyledForm>\r\n                                            <StyledFormTopWrapper>\r\n                                                <StyledFormEmail>\r\n                                                    <StyledLabel>\r\n                                                        Email\r\n                                                </StyledLabel><br />\r\n                                                    <StyledField\r\n                                                        name=\"email\"\r\n                                                        type=\"input\"\r\n                                                    />\r\n                                                    <StyledErrorMessage\r\n                                                        name=\"email\"\r\n                                                        component=\"span\"\r\n                                                    />\r\n                                                </StyledFormEmail>\r\n                                                <StyledFormPassword>\r\n                                                    <StyledLabel>\r\n                                                        Hasło\r\n                                                </StyledLabel><br />\r\n                                                    <StyledField\r\n                                                        name=\"password\"\r\n                                                        type=\"password\"\r\n                                                    />\r\n                                                    <StyledErrorMessage\r\n                                                        name=\"password\"\r\n                                                        component=\"span\"\r\n                                                    />\r\n                                                </StyledFormPassword>\r\n                                            </StyledFormTopWrapper>\r\n                                            <StyledButtonsWrapper>\r\n                                                <StylednNavLink to='/rejestracja'>\r\n                                                    Załóż konto\r\n                                                </StylednNavLink>\r\n                                                <StyledButton\r\n                                                    type=\"button\"\r\n                                                    isGoogleSignIn\r\n                                                    onClick={signInWithGoogle}\r\n                                                >\r\n                                                    Zaloguj z Google\r\n                                                </StyledButton>\r\n                                                <StyledButton\r\n                                                    disabled={isSubmitting}\r\n                                                    type=\"submit\">\r\n                                                    Zaloguj się\r\n                                                </StyledButton>\r\n                                            </StyledButtonsWrapper>\r\n                                        </StyledForm>\r\n                                    )\r\n                                }\r\n                            </Formik>\r\n                        </StyledLoginContentBottom>\r\n                    </StyledLoginContent>\r\n            }\r\n        </StyledLoginWrapper>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({ user }) => {\r\n    return {\r\n        currentUser: user.currentUser\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Login);","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Decoration from '../Decoration';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst StyledLoginWrapper = styled.div`\r\n    width: 100%;\r\n    height: 100vh;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nconst StyledLoginContent = styled.div`\r\n    width: 500px;\r\n    height: 350px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n\r\n    @media (max-width: 1366px) {\r\n        height: 450px\r\n    }\r\n`;\r\n\r\nconst StyledTitle = styled.div`\r\n    font-size: 38px;\r\n    line-height: 55px;\r\n    letter-spacing: -0.76px;\r\n    font-weight: 400;\r\n    text-align: center;\r\n`;\r\n\r\nconst StylednNavLink = styled(NavLink)`\r\n    width: 150px;\r\n    height: 50px;\r\n    border: 1px solid black;\r\n    color: #000;\r\n    font-weight: 300;\r\n    font-size: 18px;\r\n    text-decoration: none;\r\n    padding: 13px;\r\n`;\r\n\r\nconst Logout = () => {\r\n    return (\r\n\r\n        <StyledLoginWrapper>\r\n            <StyledLoginContent>\r\n                <StyledTitle>\r\n                    Pomyślnie wylogowano!\r\n                </StyledTitle>\r\n                <Decoration />\r\n                <StylednNavLink\r\n                    to='/'\r\n                >\r\n                    Strona Główna\r\n                </StylednNavLink>\r\n            </StyledLoginContent>\r\n        </StyledLoginWrapper>\r\n\r\n    )\r\n}\r\n\r\nexport default Logout;","const SET_CURRENT_USER = \"Set current user\";\r\n\r\nexport default {\r\n    SET_CURRENT_USER\r\n}","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { auth, createUserProfileDocument } from './firebase/firebase.utils';\nimport { connect } from 'react-redux';\nimport Header from '../src/components/Header/Header';\nimport Homepage from './components/Home';\nimport NotFound from './components/NotFound';\nimport MainTemplate from './templates/MainTemplate';\nimport Register from './components/Register/Register';\nimport Login from './components/Login/Login';\nimport Logout from './components/Logout/Logout';\nimport { setCurrentUser } from './redux/users/actions';\n\nclass App extends React.Component {\n  unsubscribeFromAuth = null;\n\n  componentDidMount() {\n    const { setCurrentUser } = this.props;\n\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      if (userAuth) {\n        const userRef = await createUserProfileDocument(userAuth);\n\n        userRef.onSnapshot(snapShot => {\n          setCurrentUser({\n            id: snapShot.id,\n            ...snapShot.data()\n          });\n        });\n      }\n\n      setCurrentUser(userAuth);\n    })\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return (\n      <Router>\n        <MainTemplate>\n          <Header />\n          <Switch>\n            <Route exact path='/Oddaj-w-dobre-rece/' component={Homepage} />\n            <Route exact path='/Oddaj-w-dobre-rece/rejestracja' component={Register} />\n            <Route exact path='/Oddaj-w-dobre-rece/logowanie' component={Login} />\n            <Route exact path='/Oddaj-w-dobre-rece/wylogowano' component={Logout} />\n            <Route path='*' component={NotFound} />\n          </Switch>\n        </MainTemplate>\n      </Router>\n    );\n  }\n}\n\nconst mapDispatchStateToProps = dispatch => ({\n  setCurrentUser: user => dispatch(setCurrentUser(user))\n});\n\nexport default connect(null, mapDispatchStateToProps)(App);\n","import types from './types';\r\n\r\nexport const setCurrentUser = user => ({\r\n    type: types.SET_CURRENT_USER,\r\n    payload: user\r\n});","import types from './types';\r\n\r\nconst INITIAL_STATE = {\r\n    currentUser: null\r\n}\r\n\r\nconst userReducer = (state = INITIAL_STATE, { payload, type }) => {\r\n    switch (type) {\r\n        case types.SET_CURRENT_USER:\r\n            return {\r\n                ...state,\r\n                currentUser: payload\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default userReducer;","import types from './types';\r\n\r\nconst INITIAL_STATE = {\r\n    list: [],\r\n    current: {}\r\n}\r\n\r\nconst foundationsReducer = (state = INITIAL_STATE, { payload, type }) => {\r\n    switch (type) {\r\n        case types.ADD_FOUNDATION:\r\n            return {\r\n                ...state,\r\n                list: payload,\r\n                current: payload.find(el => el.name === \"foundation\")\r\n            }\r\n        case types.RESET_FOUNDATIONS:\r\n            return {\r\n                ...state, list: []\r\n            }\r\n        case types.SET_CURRENT_FUNDATION:\r\n            return {\r\n                ...state,\r\n                current: state.list.find(el => el.name === payload)\r\n            }\r\n        case types.CLEAR:\r\n            return INITIAL_STATE\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default foundationsReducer;","import { combineReducers } from 'redux';\r\nimport userReducer from './users/reducer';\r\nimport foundationsReducer from './foundations/reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    user: userReducer,\r\n    foundations: foundationsReducer\r\n})\r\n\r\nexport default rootReducer; ","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport rootReducer from './rootReducer';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\r\n\r\nexport default store; ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n","module.exports = __webpack_public_path__ + \"static/media/Decoration.2290784e.svg\";","module.exports = __webpack_public_path__ + \"static/media/Home-Hero-Image.e99903ed.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3ColumnsBackground.99f2e620.png\";","module.exports = __webpack_public_path__ + \"static/media/Icon-1.91147906.svg\";","module.exports = __webpack_public_path__ + \"static/media/Icon-2.db91e33e.svg\";","module.exports = __webpack_public_path__ + \"static/media/Icon-3.2cfe9dfe.svg\";","module.exports = __webpack_public_path__ + \"static/media/Icon-4.436df0aa.svg\";","module.exports = __webpack_public_path__ + \"static/media/People.6fa36651.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Signature.e54cfcfc.svg\";","module.exports = __webpack_public_path__ + \"static/media/Background-Contact-Form.f4db7ddd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Instagram.703479fd.svg\";","module.exports = __webpack_public_path__ + \"static/media/Facebook.df65b6c0.svg\";"],"sourceRoot":""}